#!/usr/bin/python
# -*- coding: utf_8 -*-

from random import randrange
from Tkinter import *
from time import sleep

#definition des cartes
couleur = ('pique', 'trefle', 'carreau', 'coeur')
hauteur = ('as', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'valet', 'dame', 'roi')


class cCard():

    def __init__(self,c,h):
        self.couleur = c
        self.valeur = h
        self.face=False

    def afficher_carte(self):
        unecarteopif = "cartes/"+self.valeur+"_"+self.couleur+".gif"
        return PhotoImage(file=unecarteopif)

class cPaquet():

    def __init__(self):
        self.cartes = [] #un paquet est un tableau de 52 cartes (4x13)
        for c in range(4):
            for h in range(13):
                nouvelle_carte = cCard(couleur[c], hauteur[h]) #la hauteur commence Ã  1
                self.cartes.append(nouvelle_carte)
                
    def melange(self):
        t = len(self.cartes)
        for i in range(t):
            h1, h2 = randrange(t), randrange(t)
            self.cartes[h1], self.cartes[h2] = self.cartes[h2], self.cartes[h1]

    def tirage(self):
        t = len(self.cartes)
        if t>0:
            carte = self.cartes[0]
            del(self.cartes[0])
            return carte
        else:
            return None
       
    def jouer():
        global carte1, lab1
        c = jeu.tirage()
        if c != None:
            carte1 = c.afficher_carte()
            lab1.configure(image=carte1)

def lancement():
    global mise, pognon, credit_joueur, score

    can.delete(ALL)
    if credit_joueur == 0:
        can.create_text(200,200,text="PERDU",fill='black',font='Arial 25')
        can.update
        sleep(2)
#        fenetre.destroy()
    score = can.create_text(400,400, text='credit: '+str(credit_joueur),fill='black',font='Arial 18')
    can.update
    mise = Spinbox(fenetre, from_=10, to=100)
    mise.grid(row = 2, column = 1)
    b1 = Button(fenetre, text ='JOUER', width=15, command = reinit)
    b1.grid(row = 3, column = 1)
        
def reinit():
    global cartes_joueur, cartes_croupier, joueur, croupier, score_croupier, score_joueur, credit_joueur, pognon, mise
    global jeu, can, score

    pognon = int(mise.get())
    if (pognon >> credit_joueur):
        can.create_text(200,200,text="PAS ASSEZ D'ARGENT RENDEZ VOUS SUR PAYPAL",fill='black',font='Arial 25')
        can.update
        lancement()
    credit_joueur = credit_joueur - pognon
    b1 = Button(fenetre, text ='CARTE', width=15, command=suite)
    b1.grid(row = 3, column = 1)
    b2 = Button(fenetre, text ='Quitter', width=15, command=fenetre.destroy)
    b2.grid(row = 3, column = 3)
    b3 = Button(fenetre, text ='Je reste', width=15, command=stop)
    b3.grid(row = 3, column = 2)       
    can.delete(ALL)
    can.create_text(60,30,text="Croupier",fill='black',font='Arial 18')
    can.create_text(60,470,text="Joueur",fill='black',font='Arial 18')
    score = can.create_text(400,400, text='credit: '+str(credit_joueur),fill='black',font='Arial 18')
    can.update()
    croupier.reinit()
    cartes_croupier = []
    jeu = cPaquet()
    jeu.melange()           
    c = jeu.tirage()
    cartes_croupier.append(c.afficher_carte())
    can.create_image(100, 150, image=cartes_croupier[0])
    croupier.ajouter(c)
    score_croupier = can.create_text(150,30,text=str(croupier.total()),fill='black',font='Arial 18')
    can.update()

    joueur.reinit() 
    cartes_joueur = []    
    c = jeu.tirage()
    cartes_joueur.append(c.afficher_carte())
    can.create_image(100, 350, image=cartes_joueur[0])
    can.update()
    joueur.ajouter(c)
    c = jeu.tirage()
    cartes_joueur.append(c.afficher_carte())
    can.create_image(150, 350, image=cartes_joueur[1])
    can.update()
    joueur.ajouter(c)
    score_joueur = can.create_text(150,470,text=str(joueur.total()),fill='black',font='Arial 18')
    can.update()
    if joueur.total() == 21:
        can.create_text(250,470, text = 'BlackJack !', fill = 'green', font = 'Arial 25')
        can.update()
        credit_joueur = credit_joueur + int(pognon)*1.5
        credit_joueur = int(credit_joueur)
        sleep(2)
        lancement()
        
class Main():
    
    def __init__(self):
        "Construction de la liste des 52 cartes"
        self.main = []

    def ajouter(self, c):
        "Ajoute la carte c"
        self.main.append(hauteur.index(c.valeur)+1)

    def total(self):
        "Calcule le total des points de la main"
        return calculer_points(self.main)

    def nb_cartes(self):
        return len(self.main)

    def reinit(self):
        self.main = []

def calculer_points(cartes):
    val = 0
    for cCard in cartes:
        if 1 < cCard <= 10:
            val += cCard
        elif cCard > 10:     
            val += 10      
    nb_as = cartes.count(1) 
    while nb_as>1:
        val += 1   
        nb_as -= 1
    if nb_as == 1 and val + 11 <= 21:
        return val + 11
    elif 1 in cartes:
        return val + 1
    else:
        return val    

def suite():
    global cartes_joueur, score_joueur, joueur, credit_joueur, pognon, credit_joueur, mise
    c = jeu.tirage()
    cartes_joueur.append(c.afficher_carte())
    joueur.ajouter(c)
    n = joueur.nb_cartes()
    can.create_image(150+50*(n-2), 350, image=cartes_joueur[n-1])
    can.delete(score_joueur)
    score_joueur = can.create_text(150,470,text=str(joueur.total()),fill='black',font='Arial 18') 
    can.update()
    if joueur.total()> 21:
        can.create_text(250, 470, text="Too much !",fill='red',font='Arial 18')
        can.update()
        sleep(2)
        lancement()
    elif joueur.total() == 21:
        can.create_text(250,470, text = 'BlackJack !', fill = 'green', font = 'Arial 25')
        can.update()
        credit_joueur = credit_joueur + pognon*2
        sleep(2)
        lancement()

def stop():
    global score_joueur, cartes_croupier, croupier, score_croupier, credit_joueur, pognon, credit_joueur, mise
    c = jeu.tirage()
    cartes_croupier.append(c.afficher_carte())
    croupier.ajouter(c)
    n = croupier.nb_cartes()
    can.create_image(150+50*(n-2), 150, image=cartes_croupier[n-1])
    can.delete(score_croupier)
    score_croupier = can.create_text(150,30,text=str(croupier.total()),fill='black',font='Arial 18')
    can.update()
    if croupier.total() == 21:
        can.create_text(250, 470, text="PERDU",fill='red',font='Arial 18')
        can.create_text(250,30, text = 'BlackJack !', fill = 'green', font = 'Arial 25')
        can.update()
        sleep(2)
        lancement()
    elif croupier.total() > joueur.total() and croupier.total() < 21:
        can.create_text(250, 470, text="PERDU",fill='red',font='Arial 18')
        can.update()
        sleep(2)
        lancement()
    elif croupier.total() > 21:
        can.create_text(250, 30, text="Too much !",fill='red',font='Arial 18')
        can.create_text(250, 470, text="GAGNE",fill='red',font='Arial 18')
        can.update()
        credit_joueur = credit_joueur + pognon*2
        sleep(2)
        lancement()
    else:
        sleep(1)
        stop()

# fenetre graphique
joueur = Main()
cartes_joueur = []
croupier = Main()
carte_croupier = []
jeu = cPaquet()
credit_joueur = 100
fenetre = Tk()
fenetre.title("Blackjack")
can = Canvas(fenetre, width=600, height=500, bg ='white')
can.grid(row = 1, column = 1, columnspan = 3, padx=5, pady=5)
lancement()

# demarrage :
fenetre.mainloop()  
